AWSTemplateFormatVersion: 2010-09-09
Transform:
- AWS::Serverless-2016-10-31

Parameters:
  ProjectId:
    Type: String
    Default: 'template-lambda-devops'
    Description: ProjectID used to associate new resources to team members
  CodeVersion:
    Type: String
    Description: SemVer to deploy
  Stage:
    Type: String
    Description: The name for a project pipeline stage, such as Staging or Prod, for which resources are provisioned and deployed.
    Default: ''

Globals:
  Function:
    AutoPublishAlias: live
    DeploymentPreference:
      Enabled: true
      Type: Canary10Percent5Minutes
      Alarms:
        # A list of alarms that you want to monitor
        - !Ref GetHelloWorldMetricGreaterThanZeroAlarm
        - !Ref PostHelloWorldMetricGreaterThanZeroAlarm

Resources:
  # GET Hello World
  GetHelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectId}-GetHelloWorld'
      CodeUri:
        Bucket: 'template-lambda-devops'
        Key: !Sub 'handlers/get/${CodeVersion}.zip'
      VersionDescription: !Ref CodeVersion
      Handler: get.handler
      Runtime: nodejs14.x
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: get
  GetHelloWorldMetricGreaterThanZeroAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: GetHelloWorld
    Properties:
      AlarmName: !Sub '${ProjectId}-lambda-${GetHelloWorld}'
      AlarmDescription: "pre-deployment alarm to check for errors in the function"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref GetHelloWorld
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: '60'
      Statistic: Sum
      Threshold: '1'
  # POST Hello World
  PostHelloWorld:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub '${ProjectId}-PostHelloWorld'
      CodeUri:
        Bucket: 'template-lambda-devops'
        Key: !Sub 'handlers/post/${CodeVersion}.zip'
      VersionDescription: !Ref CodeVersion
      Handler: post.handler
      Runtime: nodejs14.x
      Role:
        Fn::GetAtt:
        - LambdaExecutionRole
        - Arn
      Events:
        GetEvent:
          Type: Api
          Properties:
            Path: /
            Method: post
  PostHelloWorldMetricGreaterThanZeroAlarm:
    Type: AWS::CloudWatch::Alarm
    DependsOn: PostHelloWorld
    Properties:
      AlarmName: !Sub '${ProjectId}-lambda-${PostHelloWorld}'
      AlarmDescription: "pre-deployment alarm to check for errors in the function"
      ComparisonOperator: GreaterThanOrEqualToThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref PostHelloWorld
      EvaluationPeriods: 1
      MetricName: Errors
      Namespace: AWS/Lambda
      Period: '60'
      Statistic: Sum
      Threshold: '1'
  # Roles
  LambdaExecutionRole:
    Description: Creating service role in IAM for AWS Lambda
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectId}-Execution${Stage}'
      AssumeRolePolicyDocument:
        Statement:
        - Effect: Allow
          Principal:
            Service: [lambda.amazonaws.com]
          Action: sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub 'arn:${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
      # PermissionsBoundary: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:policy/${ProjectId}_PermissionsBoundary'
